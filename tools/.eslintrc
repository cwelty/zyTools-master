{
    "env": {
        "browser": true,
        "jquery": true,
        "qunit": true,
        "es6": true,
    },
    "globals": {
        "Handlebars": true,
        "math": true,
        "require": true,
    },
    "parserOptions": {
        "ecmaVersion": 6,
    },
    "plugins": [
        "grunt-preprocessor",
    ],
    "rules": {
        // Possible Errors
        "comma-dangle": [2, "always-multiline"],
        "no-cond-assign": 2,
        "no-console": 1,
        "no-constant-condition": 2,
        "no-control-regex": 2,
        "no-debugger": 1,
        "no-dupe-args": 2,
        "no-dupe-keys": 2,
        "no-duplicate-case": 2,
        "no-empty-character-class": 2,
        "no-empty": 2,
        "no-ex-assign": 2,
        "no-extra-boolean-cast": 2,
        "no-extra-parens": [2, "functions"],
        "no-extra-semi": 2,
        "no-func-assign": 2,
        "no-inner-declarations": [2, "functions"],
        "no-invalid-regexp": 2,
        "no-irregular-whitespace": 2,
        "no-negated-in-lhs": 2,
        "no-obj-calls": 2,
        "no-regex-spaces": 2,
        "no-sparse-arrays": 2,
        "no-unexpected-multiline": 2,
        "no-unreachable": 2,
        "use-isnan": 2,
        "valid-jsdoc": [2, {
            "requireReturnDescription": false,
            "prefer": {
                "returns": "return",
            }
        }],
        "valid-typeof": 2,

        // Best Practices
        "accessor-pairs": 2,
        "array-callback-return": 2,
        "block-scoped-var": 2,
        "complexity": [2, 11],
        "consistent-return": 2,
        "curly": 2,
        "default-case": 2,
        "dot-location": 0, // Do not enforce newlines before/after dot.
        "dot-notation": 2,
        "eqeqeq": 2,
        "guard-for-in": 2,
        "no-alert": 2,
        "no-caller": 2,
        "no-case-declarations": 2,
        "no-div-regex": 2,
        "no-else-return": 2,
        "no-empty-function": 2,
        "no-empty-pattern": 2,
        "no-eq-null": 2,
        "no-eval": 2,
        "no-extend-native": 2,
        "no-extra-bind": 2,
        "no-extra-label": 2,
        "no-fallthrough": 2,
        "no-floating-decimal": 2,
        "no-implicit-coercion": 2,
        "no-implicit-globals": 0, // Doesn't apply as we use module scoped files.
        "no-implied-eval": 2,
        "no-invalid-this": 2,
        "no-iterator": 2,
        "no-labels": 2,
        "no-lone-blocks": 2,
        "no-loop-func": 2,
        "no-magic-numbers": [2, {
            "ignoreArrayIndexes": true,
            "ignore": [ -1, 0, 1 ],
        }],
        "no-multi-spaces": 2,
        "no-multi-str": 2,
        "no-native-reassign": 2,
        "no-new-func": 2,
        "no-new-wrappers": 2,
        "no-new": 2,
        "no-octal-escape": 2,
        "no-octal": 2,
        "no-param-reassign": 2,
        "no-process-env": 2,
        "no-proto": 2,
        "no-redeclare": 2,
        "no-return-assign": [2, "always"],
        "no-script-url": 2,
        "no-self-assign": 2,
        "no-self-compare": 2,
        "no-sequences": 2,
        "no-throw-literal": 2,
        "no-unmodified-loop-condition": 2,
        "no-unused-expressions": 2,
        "no-unused-labels": 2,
        "no-useless-call": 2,
        "no-useless-concat": 2,
        "no-void": 2,
        "no-warning-comments": [1, {
            "terms": ["todo", "fixme", "xxx"],
            "location": "start",
        }],
        "no-with": 2,
        "radix": 2,
        "vars-on-top": 0, // Allow defining vars where needed.
        "wrap-iife": [2, "outside"],
        "yoda": [2, "never"],

        // Strict Mode
        "strict": [2, "global"],

        // Variables
        "init-declarations": 2,
        "no-catch-shadow": 2,
        "no-delete-var": 2,
        "no-label-var": 2,
        "no-shadow-restricted-names": 2,
        "no-shadow": 2,
        "no-undef": 2,
        "no-undef-init": 2,
        "no-undefined": 2,
        "no-unused-vars": 2,
        "no-use-before-define": 2,

        // Node.js and CommonJS
        "callback-return": 2,
        "global-require": 0, // We already specify dependencies in an explicit file "dependencies.js".
        "handle-callback-err": 2,
        "no-mixed-requires": [2, false],
        "no-new-require": 2,
        "no-path-concat": 0,
        "no-process-exit": 2,
        "no-restricted-imports": 0, // zyTools does not currently support ES6 modules
        "no-restricted-modules": 0, // zyTools does not currently support ES6 modules
        "no-sync": 0,

        // Stylistic Issues
        "array-bracket-spacing": [2, "always"],
        "block-spacing": 2,
        "brace-style": [2, "stroustrup"],
        "camelcase": 2,
        "comma-spacing": 2,
        "comma-style": 2,
        "computed-property-spacing": 2,
        "consistent-this": [2, "self"],
        "eol-last": 2,
        "func-names": 0, // Allow anonymous functions.
        "func-style": 0, // Use both styles.
        "id-blacklist": [2],
        "id-length": 2,
        "id-match": 0, // Unneeded regex id matching; we are fine with camelCase.
        "indent": [2, 4, {
            "SwitchCase": 1
        }],
        "jsx-quotes": 0, // JSX quotes do not allow escaped quotes inside string literal.
        "key-spacing": 2,
        "keyword-spacing": 2,
        "linebreak-style": 2,
        "lines-around-comment": [2, {
            "beforeBlockComment": true,
            "beforeLineComment": true,
        }],
        "max-depth": [2, 4],
        "max-len": [2, 140, 4, {
            "ignoreUrls": true,
            "ignoreComments": true
        }],
        "max-nested-callbacks": [2, 4],
        "max-params": [2, 5],
        "max-statements": [0, 10], // Do not limit statements in a function.
        "new-cap": 2,
        "new-parens": 2,
        "newline-after-var": 2,
        "newline-per-chained-call": 0,
        "no-array-constructor": 2,
        "no-bitwise": 2,
        "no-continue": 0, // Allow continue to save on loop iterations.
        "no-inline-comments": 2, // Allow inline comments for readability.
        "no-lonely-if": 2,
        "no-mixed-spaces-and-tabs": 2,
        "no-multiple-empty-lines": [2, {
            "max": 2,
            "maxEOF": 1,
        }],
        "no-negated-condition": 2,
        "no-nested-ternary": 2,
        "no-new-object": 2,
        "no-plusplus": 0, // Allow ++ and --
        "no-restricted-syntax": 0, // List restricted syntax here.
        "no-spaced-func": 2,
        "no-ternary": 0, // Ternary can be cleaner code.
        "no-trailing-spaces": 2,
        "no-underscore-dangle": [1, {
            "allowAfterThis": true
        }],
        "no-unneeded-ternary": 2,
        "no-whitespace-before-property": 2,
        "object-curly-spacing": [2, "always"],
        "one-var": [2, "never"], // Each var, let, const should get it's own line.
        "one-var-declaration-per-line": 2,
        "operator-assignment": [2, "always"],
        "operator-linebreak": [2, "after"],
        "padded-blocks": 0, // Turn off; ideally we would always pad multi-line blocks and never single.
        "quote-props": [2, "as-needed"],
        "quotes": [2, "single"],
        "require-jsdoc": 2,
        "semi-spacing": 2,
        "semi": 2,
        "sort-imports": 2,
        "sort-vars": 2,
        "space-before-blocks": 2,
        "space-before-function-paren": [2, "never"],
        "space-in-parens": 2,
        "space-infix-ops": 2,
        "space-unary-ops": [2, {
            "words": true,
            "nonwords": false,
        }],
        "spaced-comment": [2, "always", {
            "line": {
                "markers": ["/"],
                "exceptions": ["-", "+"]
            },
            "block": {
                "markers": ["!"],
                "exceptions": ["*"]
            },
        }],
        "wrap-regex": 2,

        // ECMAScript 6*
        "arrow-body-style": 2,
        "arrow-parens": [2, "as-needed"],
        "arrow-spacing": 2,
        "constructor-super": 2,
        "generator-star-spacing": [2, "after"],
        "no-class-assign": 2,
        "no-confusing-arrow": 2,
        "no-const-assign": 2,
        "no-dupe-class-members": 2,
        "no-new-symbol": 2,
        "no-this-before-super": 2,
        "no-useless-constructor": 2,
        "no-var": 2,
        "object-shorthand": [2, "properties"],
        "prefer-arrow-callback": 2,
        "prefer-const": 2,
        "prefer-reflect": 0, // Turn off; zyTools do not yet have support for Reflect.
        "prefer-rest-params": 2,
        "prefer-spread": 2,
        "prefer-template": 2,
        "require-yield": 2,
        "template-curly-spacing": 2,
        "yield-star-spacing": 2,
    },
}

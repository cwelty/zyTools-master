/*! wavesurfer.js 1.0.26
* https://github.com/katspaugh/wavesurfer.js
* @license CC-BY 3.0
*/!function(e,t){"function"==typeof define&&define.amd?define(["wavesurfer"],t):e.WaveSurfer.Microphone=t(e.WaveSurfer)}(this,function(e){"use strict";return e.Microphone={init:function(e){this.params=e;this.wavesurfer=e.wavesurfer;if(!this.wavesurfer)throw new Error("No WaveSurfer instance provided");this.active=!1,this.paused=!1,this.reloadBufferFunction=this.reloadBuffer.bind(this);var t=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;t?this.getUserMedia=t.bind(navigator):this.getUserMedia=function(e,t,i){i(new Error("getUserMedia is not supported"))},this.bufferSize=this.params.bufferSize||4096,this.numberOfInputChannels=this.params.numberOfInputChannels||1,this.numberOfOutputChannels=this.params.numberOfOutputChannels||1,this.micContext=this.wavesurfer.backend.getAudioContext()},start:function(){this.getUserMedia({video:!1,audio:!0},this.gotStream.bind(this),this.deviceError.bind(this))},togglePlay:function(){this.active?(this.paused=!this.paused,this.paused?this.pause():this.play()):this.start()},play:function(){this.paused=!1,this.connect()},pause:function(){this.paused=!0,this.disconnect()},stop:function(){this.active&&(this.stopDevice(),this.wavesurfer.empty())},stopDevice:function(){this.active=!1,this.disconnect(),this.stream&&this.stream.getAudioTracks().forEach(function(e){e.stop()})},connect:function(){void 0!==this.stream&&(this.mediaStreamSource=this.micContext.createMediaStreamSource(this.stream),this.levelChecker=this.micContext.createScriptProcessor(this.bufferSize,this.numberOfInputChannels,this.numberOfOutputChannels),this.mediaStreamSource.connect(this.levelChecker),this.levelChecker.connect(this.micContext.destination),this.levelChecker.onaudioprocess=this.reloadBufferFunction)},disconnect:function(){void 0!==this.mediaStreamSource&&this.mediaStreamSource.disconnect(),void 0!==this.levelChecker&&(this.levelChecker.disconnect(),this.levelChecker.onaudioprocess=void 0)},reloadBuffer:function(e){this.paused||(this.wavesurfer.empty(),this.wavesurfer.loadDecodedBuffer(e.inputBuffer))},gotStream:function(e){this.stream=e,this.active=!0,this.play(),this.fireEvent("deviceReady",e)},destroy:function(e){this.paused=!0,this.stop()},deviceError:function(e){this.fireEvent("deviceError",e)}},e.util.extend(e.Microphone,e.Observer),e.Microphone});